taz_junction_num = {
    "taz_0": 7,
    "taz_0d": 7,
    "taz_1": 6,
    "taz_1d": 6,
    "taz_2": 6,
    "taz_2d": 6,
    "taz_3": 5,
    "taz_3d": 5,
    "taz_4": 5,
    "taz_4d": 5,
    "taz_5": 4,
    "taz_5d": 4,
    "taz_6": 4,
    "taz_6d": 4,
    "taz_7": 3,
    "taz_7d": 3,
    "taz_8": 3,
    "taz_8d": 3,
    "taz_9": 2,
    "taz_9d": 2,
    "taz_10": 2,
    "taz_10d": 2,
    "taz_11": 1,
    "taz_11d": 1,
    "taz_12": 1,
    "taz_12d": 1,
    "taz_13": 0,
    "taz_13d": 0,
    "taz_cf": 4,
    "taz_cfd": 4,
}  # Higher number is more northwest along the i24 highway


def get_main_road_west_lanes(with_internal=True):
    main_road_west_lanes = [
        # From east to west:
        # 4 lane road segment
        "19603466_0",
        "19603466_1",
        "19603466_2",
        "19603466_3",
        # Junction 203448348
        ":203448348_0_0",
        ":203448348_1_0",
        ":203448348_2_0",
        ":203448348_3_0",
        ":203448348_3_1",
        ":203448348_3_2",
        # 4 lane road segment
        "975907280_0",
        "975907280_1",
        "975907280_2",
        "975907280_3",
        # Junction 203448351
        ":203448351_0_0",
        ":203448351_0_1",
        ":203448351_0_2",
        ":203448351_0_3",
        # 4 lane road segment
        "19603480_0",
        "19603480_1",
        "19603480_2",
        "19603480_3",
        # Junction 203464511
        ":203464511_0_0",
        ":203464511_1_0",
        ":203464511_1_1",
        ":203464511_1_2",
        ":203464511_1_3",
        # 5 lane road segment
        "173720357_0",
        "173720357_1",
        "173720357_2",
        "173720357_3",
        "173720357_4",
        # Junction 9028108532
        ":9028108532_0_0",
        ":9028108532_0_1",
        ":9028108532_0_2",
        ":9028108532_0_3",
        # 4 lane road segment
        "975594796_0",
        "975594796_1",
        "975594796_2",
        "975594796_3",
        #
        ":J21_0_0",
        ":J21_0_1",
        ":J21_0_2",
        ":J21_0_3",
        # After calibrator
        "975594796.280_0",
        "975594796.280_1",
        "975594796.280_2",
        "975594796.280_3",
        #
        ":J22_0_0",
        ":J22_0_1",
        ":J22_0_2",
        ":J22_0_3",
        # After calibrator
        "975594796.1001_0",
        "975594796.1001_1",
        "975594796.1001_2",
        "975594796.1001_3",
        # Junction 203434375
        ":203434375_0_0",
        ":203434375_1_0",
        ":203434375_1_1",
        ":203434375_1_2",
        ":203434375_1_3",
        # 4 lane road segment
        "975594795_0",
        "975594795_1",
        "975594795_2",
        "975594795_3",
        # Junction 203434361
        ":203434361_0_0",
        ":203434361_1_0",
        ":203434361_1_1",
        ":203434361_1_2",
        ":203434361_1_3",
        # 5 lane road segment
        "635462235_0",
        "635462235_1",
        "635462235_2",
        "635462235_3",
        "635462235_4",
        # Junction 1844879476
        ":1844879476_0_0",
        ":1844879476_0_1",
        ":1844879476_0_2",
        ":1844879476_0_3",
        # 4 lane road segment
        "173720368_0",
        "173720368_1",
        "173720368_2",
        "173720368_3",
        #
        ":J23_0_0",
        ":J23_0_1",
        ":J23_0_2",
        ":J23_0_3",
        # After calibrator and detector
        "173720368.549_0",
        "173720368.549_1",
        "173720368.549_2",
        "173720368.549_3",
        # Junction 1913883944
        ":1913883944_0_0",
        ":1913883944_1_0",
        ":1913883944_1_2",
        ":1913883944_1_3",
        # 4 lane road segment
        "974949114_0",
        "974949114_1",
        "974949114_2",
        "974949114_3",
        # Junction 1913884051
        ":1913884051_0_0",
        ":1913884051_1_0",
        ":1913884051_1_1",
        ":1913884051_1_2",
        ":1913884051_1_3",
        # 4 lane road segment
        "977008894_0",
        "977008894_1",
        "977008894_2",
        "977008894_3",
        "977008894_4",
        # Junction 9041165759
        ":9041165759_0_0",
        ":9041165759_0_1",
        ":9041165759_0_2",
        ":9041165759_0_3",
        ":9041165759_0_4",
        # 4 lane road segment
        "977008893_0",
        "977008893_1",
        "977008893_2",
        "977008893_3",
        #
        ":J24_0_0",
        ":J24_0_1",
        ":J24_0_2",
        ":J24_0_3",
        # After calibrator and detector
        "977008893.184_0",
        "977008893.184_1",
        "977008893.184_2",
        "977008893.184_3",
        #
        ":J25_0_0",
        ":J25_0_1",
        ":J25_0_2",
        ":J25_0_3",
        # After calibrator and detector
        "977008893.1043_0",
        "977008893.1043_1",
        "977008893.1043_2",
        "977008893.1043_3",
        # Junction 9041165758
        ":9041165758_0_0",
        ":9041165758_0_1",
        ":9041165758_0_2",
        ":9041165758_0_3",
        ":9041165758_0_4",
        # 5 lane road segment
        "977008892_0",
        "977008892_1",
        "977008892_2",
        "977008892_3",
        "977008892_4",
        # Junction 202177572
        ":202177572_0_0",
        ":202177572_1_0",
        ":202177572_1_1",
        ":202177572_1_2",
        ":202177572_1_3",
        # 4 lane road segment
        "977008891_0",
        "977008891_1",
        "977008891_2",
        "977008891_3",
        # Junction 202185444
        ":202185444_0_0",
        ":202185444_1_0",
        ":202185444_1_1",
        ":202185444_1_2",
        ":202185444_1_3",
        # 5 lane road segment
        "992666043_0",
        "992666043_1",
        "992666043_2",
        "992666043_3",
        "992666043_4",
        #
        ":J29_0_0",
        ":J29_0_1",
        ":J29_0_2",
        ":J29_0_3",
        ":J29_0_4",
        #
        "992666043.117_0",
        "992666043.117_1",
        "992666043.117_2",
        "992666043.117_3",
        "992666043.117_4",
        # Junction 202192541
        ":202192541_0_0",
        ":202192541_0_1",
        ":202192541_2_0",
        ":202192541_2_1",
        ":202192541_2_2",
        ":202192541_2_3",
        # 4 lane road segment
        "992666042_0",
        "992666042_1",
        "992666042_2",
        "992666042_3",
        # Junction 202192528
        ":202192528_0_0",
        ":202192528_1_0",
        ":202192528_1_1",
        ":202192528_1_2",
        ":202192528_1_3",
        # 5 lane road segment
        "634155175_0",
        "634155175_1",
        "634155175_2",
        "634155175_3",
        "634155175_4",
        # Junction J4
        ":J4_0_0",
        ":J4_0_1",
        ":J4_0_2",
        ":J4_0_3",
        # 4 lane road segment
        "634155175.210_0",
        "634155175.210_1",
        "634155175.210_2",
        "634155175.210_3",
        #
        ":J26_0_0",
        ":J26_0_1",
        ":J26_0_2",
        ":J26_0_3",
        #
        "634155175.210.676_0",
        "634155175.210.676_1",
        "634155175.210.676_2",
        "634155175.210.676_3",
        #
        ":J27_0_0",
        ":J27_0_1",
        ":J27_0_2",
        ":J27_0_3",
        #
        "634155175.210.1522_0",
        "634155175.210.1522_1",
        "634155175.210.1522_2",
        "634155175.210.1522_3",
        #
        ":J28_0_0",
        ":J28_0_1",
        ":J28_0_2",
        ":J28_0_3",
        #
        "634155175.210.1522.1093_0",
        "634155175.210.1522.1093_1",
        "634155175.210.1522.1093_2",
        "634155175.210.1522.1093_3",
        # Junction 202229638
        ":202229638_0_0",
        ":202229638_1_0",
        ":202229638_1_1",
        ":202229638_1_2",
        ":202229638_1_3",
        # 4 lane road segment
        "992670973_0",
        "992670973_1",
        "992670973_2",
        "992670973_3",
        # Junction 202195332
        ":202195332_0_0",
        ":202195332_1_0",
        ":202195332_1_1",
        ":202195332_1_2",
        ":202195332_1_3",
        # 5 lane road segment
        "108162237_0",
        "108162237_1",
        "108162237_2",
        "108162237_3",
        "108162237_4",
        # Junction 202233199
        ":202233199_0_0",
        ":202233199_1_0",
        ":202233199_1_1",
        ":202233199_1_2",
        ":202233199_1_3",
        ":202233199_1_4",
        # 6 lane road segment
        "635078551_0",
        "635078551_1",
        "635078551_2",
        "635078551_3",
        "635078551_4",
        "635078551_5",
    ]
    if not with_internal:
        main_road_west_lanes = [
            lane for lane in main_road_west_lanes if not lane.startswith(":")
        ]
    return main_road_west_lanes


def get_main_road_west_edges(with_internal=True):
    main_road_west_edges = [
        # From east to west:
        # 4 lane road segment
        "19603466",
        # Junction 203448348
        ":203448348_0",
        ":203448348_1",
        ":203448348_2",
        ":203448348_3",
        # 4 lane road segment
        "975907280",
        # Junction 203448351
        ":203448351_0",
        # 4 lane road segment
        "19603480",
        # Junction 203464511
        ":203464511_0",
        ":203464511_1",
        # 5 lane road segment
        "173720357",
        # Junction 9028108532
        ":9028108532_0",
        # 4 lane road segment
        "975594796",
        ":J21_0",
        # After calibrator
        "975594796.280",
        ":J22_0",
        # After calibrator
        "975594796.1001",
        # Junction 203434375
        ":203434375_0",
        ":203434375_1",
        # 4 lane road segment
        "975594795",
        # Junction 203434361
        ":203434361_0",
        ":203434361_1",
        # 5 lane road segment
        "635462235",
        # Junction 1844879476
        ":1844879476_0",
        # 4 lane road segment
        "173720368",
        ":J23_0",
        # After calibrator and detector
        "173720368.549",
        # Junction 1913883944
        ":1913883944_0",
        ":1913883944_1",
        # 4 lane road segment
        "974949114",
        # Junction 1913884051
        ":1913884051_0",
        ":1913884051_1",
        # 4 lane road segment
        "977008894",
        # Junction 9041165759
        ":9041165759_0",
        # 4 lane road segment
        "977008893",
        ":J24_0",
        # After calibrator and detector
        "977008893.184",
        ":J25_0",
        # After calibrator and detector
        "977008893.1043",
        # Junction 9041165758
        ":9041165758_0",
        # 5 lane road segment
        "977008892",
        # Junction 202177572
        ":202177572_0",
        ":202177572_1",
        # 4 lane road segment
        "977008891",
        # Junction 202185444
        ":202185444_0",
        ":202185444_1",
        # 5 lane road segment
        "992666043",
        ":J29_0",
        "992666043.117",
        # Junction 202192541
        ":202192541_0",
        ":202192541_2",
        # 4 lane road segment
        "992666042",
        # Junction 202192528
        ":202192528_0",
        ":202192528_1",
        # 5 lane road segment
        "634155175",
        # Junction J4
        ":J4_0",
        # 4 lane road segment
        "634155175.210",
        ":J26_0",
        "634155175.210.676",
        ":J27_0",
        "634155175.210.1522",
        ":J28_0",
        "634155175.210.1522.1093",
        # Junction 202229638
        ":202229638_0",
        ":202229638_1",
        # 4 lane road segment
        "992670973",
        # Junction 202195332
        ":202195332_0",
        ":202195332_1",
        # 5 lane road segment
        "108162237",
        # Junction 202233199
        ":202233199_0",
        ":202233199_1",
        # 6 lane road segment
        "635078551",
    ]
    if not with_internal:
        main_road_west_edges = [
            lane for lane in main_road_west_edges if not lane.startswith(":")
        ]
    return main_road_west_edges


def taz_origin_destination_direction(start_taz, end_taz):
    if start_taz not in taz_junction_num.keys():
        print(f"Start TAZ {start_taz} is not a valid TAZ name.")
        return 0

    if end_taz not in taz_junction_num.keys():
        print(f"End TAZ {end_taz} is not a valid TAZ name.")
        return 0

    if taz_junction_num[start_taz] == taz_junction_num[end_taz]:
        # The vehicle does not go on the highway
        return 0

    if taz_junction_num[start_taz] > taz_junction_num[end_taz]:
        # The vehicle travels east on the highway
        return -1

    # The vehicle travels west on the highway
    return 1


def get_taz_junction(taz):
    return taz_junction_num[taz]
